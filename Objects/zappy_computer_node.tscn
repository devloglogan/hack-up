[gd_scene load_steps=18 format=3 uid="uid://dnxoyix7jggw"]

[ext_resource type="PackedScene" uid="uid://b42rg8bwghevo" path="res://Objects/computer_node.tscn" id="1_l8m7i"]
[ext_resource type="Script" path="res://Objects/zappy_computer_node.gd" id="2_4wsnf"]
[ext_resource type="ArrayMesh" uid="uid://c5kjksexukd37" path="res://Assets/meshes/bolt_mesh.tres" id="3_mhha5"]
[ext_resource type="AudioStream" uid="uid://bxkc3k0spwlix" path="res://Sound/barrier/GGJ_node_firewall_01_v3.wav" id="3_n7fpl"]
[ext_resource type="AudioStream" uid="uid://cgund8h6tqckd" path="res://Sound/barrier/GGJ_node_firewall_02_v3.wav" id="4_heif3"]
[ext_resource type="AudioStream" uid="uid://fkfhtbsj02yu" path="res://Sound/barrier/GGJ_node_firewall_03_v3.wav" id="5_4iccm"]
[ext_resource type="AudioStream" uid="uid://bqrej8pbdmwg3" path="res://Sound/barrier/GGJ_node_firewall_04_v3.wav" id="6_rlcnh"]
[ext_resource type="AudioStream" uid="uid://bt6dt861a5q13" path="res://Sound/barrier/GGJ_node_firewall_05_v3.wav" id="7_o63td"]
[ext_resource type="AudioStream" uid="uid://bgq3rgc5ch6is" path="res://Sound/barrier/GGJ_node_firewall_06_v3.wav" id="8_6kdjy"]

[sub_resource type="Shader" id="Shader_dmdt8"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.0.beta17's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_disabled,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color,filter_linear_mipmap,repeat_enable;
uniform float point_size : hint_range(0,128);
uniform float roughness : hint_range(0,1);
uniform sampler2D texture_metallic : hint_default_white,filter_linear_mipmap,repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r,filter_linear_mipmap,repeat_enable;
uniform float specular;
uniform float metallic;
uniform sampler2D texture_emission : source_color, hint_default_black,filter_linear_mipmap,repeat_enable;
uniform vec4 emission_color : source_color;
uniform float emission_energy;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
	
	VERTEX += .1 * smoothstep(.5, 1., sin((abs(VERTEX.y)-TIME*1.5) * 3.)) * VERTEX;
}






void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	albedo_tex *= COLOR;
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	float metallic_tex = dot(texture(texture_metallic,base_uv),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	vec4 roughness_texture_channel = vec4(1.0,0.0,0.0,0.0);
	float roughness_tex = dot(texture(texture_roughness,base_uv),roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	SPECULAR = specular;
	vec3 emission_tex = texture(texture_emission,base_uv).rgb;
	EMISSION = (emission_color.rgb+emission_tex)*emission_energy;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_h3jry"]
resource_local_to_scene = true
resource_name = "sphere_red"
render_priority = 0
shader = SubResource("Shader_dmdt8")
shader_parameter/albedo = null
shader_parameter/point_size = null
shader_parameter/roughness = null
shader_parameter/metallic_texture_channel = null
shader_parameter/specular = null
shader_parameter/metallic = null
shader_parameter/emission_color = Color(0.894118, 0.231373, 0.266667, 1)
shader_parameter/emission_energy = 1.0
shader_parameter/uv1_scale = null
shader_parameter/uv1_offset = null
shader_parameter/uv2_scale = null
shader_parameter/uv2_offset = null

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_chw1s"]
transparency = 1
albedo_color = Color(1, 0.458824, 0.0941176, 1)
emission_enabled = true
emission = Color(1, 0.458824, 0.0941176, 1)

[sub_resource type="SphereMesh" id="SphereMesh_s5k0r"]
material = SubResource("StandardMaterial3D_chw1s")
radius = 1.0
height = 2.0

[sub_resource type="Shader" id="Shader_dwjnv"]
code = "shader_type spatial;

uniform vec3 emission_color: source_color;
uniform float alpha_value: hint_range(0.0, 1.0, 0.1) = .1;

void fragment() {
	ALPHA = alpha_value;
	EMISSION = emission_color;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_aj1e2"]
render_priority = 0
shader = SubResource("Shader_dwjnv")
shader_parameter/emission_color = Color(0.894118, 0.231373, 0.266667, 1)
shader_parameter/alpha_value = 0.1

[sub_resource type="SphereShape3D" id="SphereShape3D_345t6"]
radius = 1.0

[sub_resource type="ParticleProcessMaterial" id="ParticleProcessMaterial_v7ho6"]
emission_shape = 2
emission_sphere_radius = 0.01
particle_flag_align_y = true
spread = 180.0
gravity = Vector3(0, 0, 0)
initial_velocity_min = 0.01
initial_velocity_max = 0.01
angle_min = -54.7
angle_max = 34.0

[node name="ZappyComputerNode" instance=ExtResource("1_l8m7i")]
script = ExtResource("2_4wsnf")
barrier_sounds = Array[AudioStream]([ExtResource("3_n7fpl"), ExtResource("4_heif3"), ExtResource("5_4iccm"), ExtResource("6_rlcnh"), ExtResource("7_o63td"), ExtResource("8_6kdjy")])
zap_on_start = false
zap_cycle_time = 2.0

[node name="Sphere" parent="Sphere" index="0"]
surface_material_override/1 = SubResource("ShaderMaterial_h3jry")

[node name="ZapTimer" type="Timer" parent="." index="2"]
wait_time = 2.0
autostart = true

[node name="ZapMeshInstance" type="MeshInstance3D" parent="." index="3"]
visible = false
mesh = SubResource("SphereMesh_s5k0r")
surface_material_override/0 = SubResource("ShaderMaterial_aj1e2")

[node name="ZapArea" type="Area3D" parent="." index="4"]
collision_layer = 0
collision_mask = 2

[node name="CollisionShape3D" type="CollisionShape3D" parent="ZapArea" index="0"]
shape = SubResource("SphereShape3D_345t6")

[node name="ZapParticles" type="GPUParticles3D" parent="." index="5"]
visible = false
amount = 16
lifetime = 0.5
process_material = SubResource("ParticleProcessMaterial_v7ho6")
draw_pass_1 = ExtResource("3_mhha5")

[node name="ZapBarrierSound" type="AudioStreamPlayer3D" parent="." index="7"]
attenuation_model = 2
volume_db = -16.0
pitch_scale = 0.87
bus = &"Node"

[connection signal="timeout" from="ZapTimer" to="." method="_on_zap_timer_timeout"]

[editable path="Sphere"]
